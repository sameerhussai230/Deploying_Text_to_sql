Id,Question,SQL Query
1,What are the top 10 products by sales amount?,"Question: What are the top 10 products by sales amount? SQL Query: SELECT p.Name AS [Product Name], SUM(sod.LineTotal) AS TotalSales FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY p.Name ORDER BY TotalSales DESC LIMIT 10; Explanation: This query selects the top 10 products by their total sales amount. It joins the SalesOrderDetail and Product tables, groups by product name, and sums the line total for each product. The results are ordered by total sales in descending order."
2,Which customers have made the highest number of orders?,"Question: Which customers have made the highest number of orders? SQL Query: SELECT CONCAT(p.FirstName, ' ', p.LastName) AS CustomerName, COUNT(soh.SalesOrderID) AS OrderCount FROM SalesOrderHeader soh JOIN Person p ON soh.CustomerID = p.BusinessEntityID GROUP BY CONCAT(p.FirstName, ' ', p.LastName) ORDER BY OrderCount DESC LIMIT 10; Explanation: This query retrieves the top 10 customers with the highest number of orders. It joins the SalesOrderHeader and Person tables, groups by the concatenated customer name, and counts the number of orders for each customer. The results are ordered by order count in descending order."
3,What is the total sales amount by each sales territory?,"Question: What is the total sales amount by each sales territory? SQL Query: SELECT st.Name AS Territory, SUM(soh.TotalDue) AS TotalSales FROM SalesOrderHeader soh JOIN SalesTerritory st ON soh.TerritoryID = st.TerritoryID GROUP BY st.Name ORDER BY TotalSales DESC; Explanation: This query calculates the total sales amount for each sales territory. It joins the SalesOrderHeader and SalesTerritory tables, groups by territory name, and sums the total due for each territory. The results are ordered by total sales in descending order."
4,Who are the top 5 salespeople by total sales amount?,"Question: Who are the top 5 salespeople by total sales amount? SQL Query: SELECT CONCAT(p.FirstName, ' ', p.LastName) AS SalesPersonName, SUM(soh.TotalDue) AS TotalSales FROM SalesOrderHeader soh JOIN SalesPerson sp ON soh.SalesPersonID = sp.BusinessEntityID JOIN Person p ON sp.BusinessEntityID = p.BusinessEntityID GROUP BY CONCAT(p.FirstName, ' ', p.LastName) ORDER BY TotalSales DESC LIMIT 5; Explanation: This query identifies the top 5 salespeople based on total sales amount. It joins the SalesOrderHeader, SalesPerson, and Person tables, groups by the concatenated salesperson name, and sums the total due for each salesperson. The results are ordered by total sales in descending order."
5,What is the average order value for each customer?,"Question: What is the average order value for each customer? SQL Query: SELECT CONCAT(p.FirstName, ' ', p.LastName) AS CustomerName, AVG(soh.TotalDue) AS AverageOrderValue FROM SalesOrderHeader soh JOIN Person p ON soh.CustomerID = p.BusinessEntityID GROUP BY CONCAT(p.FirstName, ' ', p.LastName) ORDER BY AverageOrderValue DESC; Explanation: This query calculates the average order value for each customer. It joins the SalesOrderHeader and Person tables, groups by the concatenated customer name, and averages the total due for each customer. The results are ordered by average order value in descending order."
6,How many orders were placed online vs. offline?,"Question: How many orders were placed online vs. offline? SQL Query: SELECT CASE WHEN soh.OnlineOrderFlag = 1 THEN 'Online' ELSE 'Offline' END AS OrderType, COUNT(soh.SalesOrderID) AS OrderCount FROM SalesOrderHeader soh GROUP BY soh.OnlineOrderFlag; Explanation: This query counts the number of orders placed online versus offline. It groups the orders based on the OnlineOrderFlag, and counts the number of sales orders for each type."
7,What is the total revenue generated from each product category?,"Question: What is the total revenue generated from each product category? SQL Query: SELECT pc.Name AS Category, SUM(sod.LineTotal) AS TotalRevenue FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN ProductSubcategory ps ON p.ProductSubcategoryID = ps.ProductSubcategoryID JOIN ProductCategory pc ON ps.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.Name ORDER BY TotalRevenue DESC; Explanation: This query calculates the total revenue generated from each product category. It joins the SalesOrderDetail, Product, ProductSubcategory, and ProductCategory tables, groups by category name, and sums the line total for each category. The results are ordered by total revenue in descending order."
8,What is the distribution of order quantities for each product?,"Question: What is the distribution of order quantities for each product? SQL Query: SELECT p.Name AS ProductName, sod.OrderQty, COUNT(*) AS OrderCount FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY p.Name, sod.OrderQty ORDER BY p.Name, sod.OrderQty; Explanation: This query shows the distribution of order quantities for each product. It joins the SalesOrderDetail and Product tables, groups by product name and order quantity, and counts the number of orders for each combination. The results are ordered by product name and order quantity."
9,Which products have the highest average unit price?,"Question: Which products have the highest average unit price? SQL Query: SELECT p.Name AS ProductName, AVG(sod.UnitPrice) AS AverageUnitPrice FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY p.Name ORDER BY AverageUnitPrice DESC LIMIT 10; Explanation: This query identifies the products with the highest average unit price. It joins the SalesOrderDetail and Product tables, groups by product name, and averages the unit price for each product. The results are ordered by average unit price in descending order."
10,What are the total sales and total quantity sold for each product?,"Question: What are the total sales and total quantity sold for each product? SQL Query: SELECT p.Name AS ProductName, SUM(sod.LineTotal) AS TotalSales, SUM(sod.OrderQty) AS TotalQuantity FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY p.Name ORDER BY TotalSales DESC; Explanation: This query calculates the total sales amount and total quantity sold for each product. It joins the SalesOrderDetail and Product tables, groups by product name, and sums the line total and order quantity for each product. The results are ordered by total sales in descending order."
11,What is the total tax amount collected for each sales territory?,"Question: What is the total tax amount collected for each sales territory? SQL Query: SELECT st.Name AS Territory, SUM(soh.TaxAmt) AS TotalTax FROM SalesOrderHeader soh JOIN SalesTerritory st ON soh.TerritoryID = st.TerritoryID GROUP BY st.Name ORDER BY TotalTax DESC; Explanation: This query calculates the total tax amount collected for each sales territory. It joins the SalesOrderHeader and SalesTerritory tables, groups by territory name, and sums the tax amount for each territory. The results are ordered by total tax in descending order."
12,Which customers have purchased the most different products?,"Question: Which customers have purchased the most different products? SQL Query: SELECT CONCAT(p.FirstName, ' ', p.LastName) AS CustomerName, COUNT(DISTINCT sod.ProductID) AS UniqueProducts FROM SalesOrderHeader soh JOIN SalesOrderDetail sod ON soh.SalesOrderID = sod.SalesOrderID JOIN Person p ON soh.CustomerID = p.BusinessEntityID GROUP BY CONCAT(p.FirstName, ' ', p.LastName) ORDER BY UniqueProducts DESC LIMIT 10; Explanation: This query identifies the customers who have purchased the most different products. It joins the SalesOrderHeader, SalesOrderDetail, and Person tables, groups by the concatenated customer name, and counts the distinct products purchased by each customer. The results are ordered by the number of unique products in descending order."
13,What is the total revenue and total profit for each product?,"Question: What is the total revenue and total profit for each product? SQL Query: SELECT p.Name AS ProductName, SUM(sod.LineTotal) AS TotalRevenue, SUM(sod.LineTotal - sod.UnitPrice * sod.OrderQty) AS TotalProfit FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY p.Name ORDER BY TotalRevenue DESC; Explanation: This query calculates the total revenue and total profit for each product. It joins the SalesOrderDetail and Product tables, groups by product name, and sums the line total and profit for each product. The results are ordered by total revenue in descending order."
14,What is the average time between order date and ship date?,"Question: What is the average time between order date and ship date? SQL Query: SELECT AVG(julianday(soh.ShipDate) - julianday(soh.OrderDate)) AS AverageTime FROM SalesOrderHeader soh WHERE soh.ShipDate IS NOT NULL; Explanation: This query calculates the average time between the order date and the ship date. It uses the `julianday` function to find the difference in days between the order date and ship date for each order where the ship date is not null, and then averages these differences."
15,Which products are frequently purchased together?,"Question: Which products are frequently purchased together? SQL Query: SELECT p1.Name AS Product1, p2.Name AS Product2, COUNT(*) AS PurchaseCount FROM SalesOrderDetail sod1 JOIN SalesOrderDetail sod2 ON sod1.SalesOrderID = sod2.SalesOrderID AND sod1.ProductID < sod2.ProductID JOIN Product p1 ON sod1.ProductID = p1.ProductID JOIN Product p2 ON sod2.ProductID = p2.ProductID GROUP BY p1.Name, p2.Name ORDER BY PurchaseCount DESC; Explanation: This query identifies products that are frequently purchased together. It performs a self-join on the SalesOrderDetail table to find pairs of products that appear in the same sales order, and then joins with the Product table to get product names. The results are grouped by product pairs and ordered by the count of such pairs in descending order."
16,What is the total number of orders placed each month?,"Question: What is the total number of orders placed each month? SQL Query: SELECT strftime('%Y', soh.OrderDate) AS OrderYear, strftime('%m', soh.OrderDate) AS OrderMonth, COUNT(soh.SalesOrderID) AS OrderCount FROM SalesOrderHeader soh GROUP BY strftime('%Y', soh.OrderDate), strftime('%m', soh.OrderDate) ORDER BY OrderYear, OrderMonth; Explanation: This query calculates the total number of orders placed each month. It groups the orders by year and month of the order date, and counts the number of sales orders for each month. The results are ordered by year and month."
17,Which customers have the highest average order value?,"Question: Which customers have the highest average order value? SQL Query: SELECT CONCAT(p.FirstName, ' ', p.LastName) AS CustomerName, AVG(soh.TotalDue) AS AverageOrderValue FROM SalesOrderHeader soh JOIN Person p ON soh.CustomerID = p.BusinessEntityID GROUP BY CONCAT(p.FirstName, ' ', p.LastName) ORDER BY AverageOrderValue DESC LIMIT 10; Explanation: This query identifies customers with the highest average order value. It joins the SalesOrderHeader and Person tables, groups by the concatenated customer name, and averages the total due for each customer. The results are ordered by average order value in descending order."
18,What is the total freight cost for each shipping method?,"Question: What is the total freight cost for each shipping method? SQL Query: SELECT sm.Name AS ShippingMethod, SUM(soh.Freight) AS TotalFreight FROM SalesOrderHeader soh JOIN ShipMethod sm ON soh.ShipMethodID = sm.ShipMethodID GROUP BY sm.Name ORDER BY TotalFreight DESC; Explanation: This query calculates the total freight cost for each shipping method. It joins the SalesOrderHeader and ShipMethod tables, groups by shipping method name, and sums the freight cost for each method. The results are ordered by total freight cost in descending order."
19,What is the distribution of order statuses?,"Question: What is the distribution of order statuses? SQL Query: SELECT soh.Status, COUNT(soh.SalesOrderID) AS OrderCount FROM SalesOrderHeader soh GROUP BY soh.Status ORDER BY soh.Status; Explanation: This query shows the distribution of order statuses. It groups the orders by status and counts the number of sales orders for each status. The results are ordered by status."
20,What is the total revenue generated from online orders?,"Question: What is the total revenue generated from online orders? SQL Query: SELECT SUM(soh.TotalDue) AS TotalRevenue FROM SalesOrderHeader soh WHERE soh.OnlineOrderFlag = 1; Explanation: This query calculates the total revenue generated from online orders. It filters the orders to include only those placed online (OnlineOrderFlag = 1) and sums the total due for these orders."